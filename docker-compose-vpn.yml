version: "3.9"
name: jellyfin-server
services:
  vpn:
    ## Read https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers for details on configuring VPN for your service provider.
    container_name: vpn
    image: qmcgaw/gluetun:v3.40.0
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-custom} # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom
      - OPENVPN_USER=${OPENVPN_USER:-""}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD:-""}

      ## Enable below if VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=${VPN_TYPE:-""}
      - WIREGUARD_ENDPOINT_IP=${WIREGUARD_ENDPOINT_IP:-""}      # Replace with your wg endpoint ip or domain
      - WIREGUARD_ENDPOINT_PORT=${WIREGUARD_ENDPOINT_PORT:-""}  # Replace with wg server port
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY:-""}        # Replace with your wg public key
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY:-""}      # Replace with your wg client private key
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES:-""}          # Replace with wg address

    ## Enable volume if VPN_SERVICE_PROVIDER=custom and VPN_TYPE=openvpn is used
    volumes:
      - ./gluetun:/gluetunw

    networks:
      - mynetwork

    devices:
      - /dev/net/tun:/dev/net/tun
      
    ports:
      # qbittorrent ports
      - 5080:5080
      - 6881:6881
      - 6881:6881/udp
      # prowlarr ports
      - 9696:9696
      # flaresolverr ports
      - 8191:8191
    restart: "unless-stopped"

  ## Check container for credentials of qBittorrent
  ## Change password after install from UI --> Tools --> Options --> WebUI ##
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:5.0.4

    depends_on:               
      vpn:                   
        condition: service_healthy 


    # Unomment below line if vpn is enabled
    network_mode: service:vpn

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - WEBUI_PORT=5080
    volumes:
      - ./qbittorrent-config:/config
      - ${MEDIA_PATH}/qbittorrent/downloads:/downloads

    ## Comment/Disable below ports if VPN is enabled
    # ports:
    #   - 5080:5080
    #   - 6881:6881
    #   - 6881:6881/udp
    restart: "unless-stopped"

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.21.1
    networks:
      mynetwork:
        ipv4_address: ${RADARR_STATIC_CONTAINER_IP:-172.20.0.8} # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    ports:
      - 7878:7878
    volumes:
      - ./radarr-config:/config
      - ${MEDIA_PATH}/radarr/movies:/movies
      - ${MEDIA_PATH}/qbittorrent/downloads:/downloads
    restart: "unless-stopped"

  sonarr:
    image: linuxserver/sonarr:4.0.14
    container_name: sonarr
    networks:
      mynetwork:
        ipv4_address: ${SONARR_STATIC_CONTAINER_IP:-172.20.0.7} # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./sonarr-config:/config      
      - ${MEDIA_PATH}/sonarr/tv:/tv
      - ${MEDIA_PATH}/sonarr/anime:/anime
      - ${MEDIA_PATH}/qbittorrent/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:1.32.2

    depends_on:               
      vpn:                   
        condition: service_healthy 
    network_mode: service:vpn 

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./prowlarr-config:/config

    restart: unless-stopped
  
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    depends_on:               
      vpn:                   
        condition: service_healthy 
    network_mode: service:vpn 

    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
      #- LANG=fr_FR
      #- LANG=en_US
    restart: unless-stopped

  recommendarr:
    container_name: recommendarr
    image: tannermiddleton/recommendarr:v1.3.0
    networks:
      - mynetwork
    environment:
      - NODE_ENV=production
      - DOCKER_ENV=true
      - PORT=3000
      - PUBLIC_URL=https://localhost:3000 # Change this public URL if you are accessing recommendarr on a domain
    volumes:
      - ./recommendarr-data:/app/server/data
    ports:
      - 3000:3000
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:2.5.2
    container_name: jellyseerr
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./jellyseerr-config:/app/config
    ports:
      - 5055:5055
    restart: unless-stopped

  jellyfin:
    image: linuxserver/jellyfin:10.10.6
    container_name: jellyfin
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./jellyfin-config:/config
      - ${MEDIA_PATH}/radarr/movies:/data/movies
      - ${MEDIA_PATH}/sonarr/tv:/data/tvshows
      - ${MEDIA_PATH}/sonarr/anime:/data/anime
      - ${MEDIA_PATH}/qbittorrent/downloads:/data/media_downloads
  # devices:
   #  - /dev/videoN:/dev/videoN # Mount GPU device 
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped
  
  
  # Doc: https://github.com/navilg/cleanmyarr
  # cleanmyarr:
  #   profiles: ["vpn", "no-vpn"]
  #   depends_on:
  #     - radarr
  #     - sonarr
  #   image: linuxshots/cleanmyarr:0.8.1
  #   container_name: cleanmyarr
  #   networks:
  #     - mynetwork
  #   volumes:
  #     - cleanmyarr-config:/config
    # restart: unless-stopped
    # environment:
    # - CMA_MAINTENANCE_CYCLE=${CMA_MAINTENANCE_CYCLE:-""}
    # - CMA_DELETE_AFTER_DAYS=${CMA_DELETE_AFTER_DAYS:-""}
    # - CMA_ENABLE_EMAIL_NOTIFICATION=${CMA_ENABLE_EMAIL_NOTIFICATION:-""}
    # - CMA_SMTP_USERNAME=${CMA_SMTP_USERNAME:-""}
    # - CMA_SMTP_ENCODED_PASSWORD=${CMA_SMTP_ENCODED_PASSWORD:-""}
    # - CMA_SMTP_TO_EMAILS=${CMA_SMTP_TO_EMAILS:-""}
    # - CMA_ENABLE_GOTIFY_NOTIFICATION=${CMA_ENABLE_GOTIFY_NOTIFICATION:-""}
    # - CMA_GOTIFY_URL=${CMA_GOTIFY_URL:-""}
    # - CMA_GOTIFY_ENCODED_APP_TOKEN=${CMA_GOTIFY_ENCODED_APP_TOKEN:-""}
    # - CMA_ENABLE_TELEGRAM_NOTIFICATION=${CMA_ENABLE_TELEGRAM_NOTIFICATION:-""}
    # - CMA_TELEGRAM_ENCODED_BOT_TOKEN=${CMA_TELEGRAM_ENCODED_BOT_TOKEN:-""}
    # - CMA_TELEGRAM_CHAT_ID=${CMA_TELEGRAM_CHAT_ID:-""}
    # - CMA_MONITOR_RADARR=${CMA_MONITOR_RADARR:-""}
    # - CMA_RADARR_URL=${CMA_RADARR_URL:-""}
    # - CMA_RADARR_ENCODED_API_KEY=${CMA_RADARR_ENCODED_API_KEY:-""}
    # - CMA_RADARR_ENABLE_NOTIFICATION=${CMA_RADARR_ENABLE_NOTIFICATION:-""}

volumes:
  torrent-downloads:
  radarr-config:
  sonarr-config:
  prowlarr-config:
  jellyfin-config:
  qbittorrent-config:
  jellyseerr-config:
  recommendarr-data:
  # cleanmyarr-config:

networks:
  mynetwork:
    external: true